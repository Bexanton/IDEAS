within IDEAS.Electric.BaseClasses;
model WattsLawSensor
  "For use  with loads. Either symmetrically divided over 3 phases (numPha=3) or single phase (numPha=1)."

  Modelica.Blocks.Interfaces.RealOutput P(start=0)
    annotation (Placement(transformation(extent={{74,30},{114,70}}),
        iconTransformation(extent={{94,50},{114,70}})));
  Modelica.Blocks.Interfaces.RealOutput Q(start=0)
    annotation (Placement(transformation(extent={{74,-10},{114,30}}),
        iconTransformation(extent={{94,10},{114,30}})));
 Modelica.Electrical.QuasiStationary.MultiPhase.Interfaces.NegativePlug vi(m=1)
                     annotation (Placement(transformation(extent={{-110,-10},{-90,
            10}},                  rotation=0)));
algorithm
  P := Modelica.ComplexMath.real(vi.pin[1].v*Modelica.ComplexMath.conj(vi.pin[1].i));
  Q := Modelica.ComplexMath.imag(vi.pin[1].v*Modelica.ComplexMath.conj(vi.pin[1].i));
  annotation (Icon(graphics={
        Line(
          points={{100,80},{100,-80}},
          color={0,0,127},
          smooth=Smooth.None),
        Ellipse(extent={{-60,60},{60,-60}}, lineColor={0,0,127}),
        Line(
          points={{-100,0},{-60,0}},
          color={0,0,127},
          smooth=Smooth.None),
        Line(
          points={{60,0},{100,0}},
          color={0,0,127},
          smooth=Smooth.None),
        Text(
          extent={{-20,40},{20,20}},
          lineColor={135,135,135},
          fillPattern=FillPattern.Solid,
          textString="P"),
        Text(
          extent={{0,-20},{40,-40}},
          lineColor={135,135,135},
          fillPattern=FillPattern.Solid,
          textString="I"),
        Text(
          extent={{-40,-20},{0,-40}},
          lineColor={135,135,135},
          fillPattern=FillPattern.Solid,
          textString="V"),
        Line(
          points={{-40,0},{40,0}},
          color={135,135,135},
          smooth=Smooth.None),
        Line(
          points={{0,0},{0,-40}},
          color={135,135,135},
          smooth=Smooth.None)}), Diagram(graphics));
end WattsLawSensor;
