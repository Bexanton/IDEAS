#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
    3600                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(153,38)
medium.rho
medium.cp
medium.cv
medium.lamda
medium.nue
ambient.medium.rho
ambient.medium.cp
ambient.medium.cv
ambient.medium.lamda
ambient.medium.nue
ambient.T_port
ambient.h
ambient.flowPort.medium.rho
ambient.flowPort.medium.cp
ambient.flowPort.medium.cv
ambient.flowPort.medium.lamda
ambient.flowPort.medium.nue
ambient.flowPort.m_flow
ambient.flowPort.h
ambient.flowPort.H_flow
ambient.usePressureInput
ambient.constantAmbientPressure
ambient.useTemperatureInput
ambient.constantAmbientTemperature
pump.medium.rho
pump.medium.cp
pump.medium.cv
pump.medium.lamda
pump.medium.nue
pump.m
pump.TInitial
pump.Q_flow
pump.T
pump.der(T)
pump.T_a
pump.T_b
pump.dT
pump.h
pump.flowPort_a.medium.rho
pump.flowPort_a.medium.cp
pump.flowPort_a.medium.cv
pump.flowPort_a.medium.lamda
pump.flowPort_a.medium.nue
pump.flowPort_a.h
pump.flowPort_a.H_flow
pump.flowPort_b.medium.rho
pump.flowPort_b.medium.cp
pump.flowPort_b.medium.cv
pump.flowPort_b.medium.lamda
pump.flowPort_b.medium.nue
pump.flowPort_b.h
pump.flowPort_b.H_flow
pump.useInput
pump.m_flowNom
pump.dpFix
pump.etaTot
pump.PEl
ambient1.medium.rho
ambient1.medium.cp
ambient1.medium.cv
ambient1.medium.lamda
ambient1.medium.nue
ambient1.T_port
ambient1.h
ambient1.flowPort.medium.rho
ambient1.flowPort.medium.cp
ambient1.flowPort.medium.cv
ambient1.flowPort.medium.lamda
ambient1.flowPort.medium.nue
ambient1.usePressureInput
ambient1.constantAmbientPressure
ambient1.useTemperatureInput
ambient1.constantAmbientTemperature
mixingVolume.medium.rho
mixingVolume.medium.cp
mixingVolume.medium.cv
mixingVolume.medium.lamda
mixingVolume.medium.nue
mixingVolume.nbrPorts
mixingVolume.m
mixingVolume.TInitial
mixingVolume.T
mixingVolume.der(T)
mixingVolume.h
mixingVolume.flowPorts[1].medium.rho
mixingVolume.flowPorts[1].medium.cp
mixingVolume.flowPorts[1].medium.cv
mixingVolume.flowPorts[1].medium.lamda
mixingVolume.flowPorts[1].medium.nue
mixingVolume.flowPorts[2].medium.rho
mixingVolume.flowPorts[2].medium.cp
mixingVolume.flowPorts[2].medium.cv
mixingVolume.flowPorts[2].medium.lamda
mixingVolume.flowPorts[2].medium.nue
mixingVolume.flowPorts[3].medium.rho
mixingVolume.flowPorts[3].medium.cp
mixingVolume.flowPorts[3].medium.cv
mixingVolume.flowPorts[3].medium.lamda
mixingVolume.flowPorts[3].medium.nue
mixingVolume.flowPorts[3].m_flow
mixingVolume.flowPorts[3].h
mixingVolume.flowPorts[3].H_flow
ambient2.medium.rho
ambient2.medium.cp
ambient2.medium.cv
ambient2.medium.lamda
ambient2.medium.nue
ambient2.T_port
ambient2.h
ambient2.flowPort.medium.rho
ambient2.flowPort.medium.cp
ambient2.flowPort.medium.cv
ambient2.flowPort.medium.lamda
ambient2.flowPort.medium.nue
ambient2.flowPort.h
ambient2.flowPort.H_flow
ambient2.usePressureInput
ambient2.constantAmbientPressure
ambient2.useTemperatureInput
ambient2.constantAmbientTemperature
pump1.medium.rho
pump1.medium.cp
pump1.medium.cv
pump1.medium.lamda
pump1.medium.nue
pump1.m
pump1.TInitial
pump1.Q_flow
pump1.T
pump1.der(T)
pump1.T_a
pump1.T_b
pump1.dT
pump1.h
pump1.flowPort_a.medium.rho
pump1.flowPort_a.medium.cp
pump1.flowPort_a.medium.cv
pump1.flowPort_a.medium.lamda
pump1.flowPort_a.medium.nue
pump1.flowPort_b.medium.rho
pump1.flowPort_b.medium.cp
pump1.flowPort_b.medium.cv
pump1.flowPort_b.medium.lamda
pump1.flowPort_b.medium.nue
pump1.useInput
pump1.m_flowNom
pump1.dpFix
pump1.etaTot
pump1.PEl
pump1.m_flowSet
step.height
step.offset
step.startTime

double initialValue(153,6)
 -1 9.9560000000000002E+002        0 1.0000000000000000E+100  1   280   # medium.rho
 -1    4177                        0       0                  1   280   # medium.cp
 -1    4177                        0       0                  1   280   # medium.cv
 -1 6.1499999999999999E-001        0       0                  1   280   # medium.lamda
 -1 7.9999999999999996E-007        0 1.0000000000000000E+100  1   280   # medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # ambient.medium.rho
  0       0                        0       0                  6   256   # ambient.medium.cp
  0       0                        0       0                  6   256   # ambient.medium.cv
  0       0                        0       0                  6   256   # ambient.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient.medium.nue
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # ambient.T_port
  0       0                        0       0                  6  1280   # ambient.h
  0       0                        0 1.0000000000000000E+100  6   256   # ambient.flowPort.medium.rho
  0       0                        0       0                  6   256   # ambient.flowPort.medium.cp
  0       0                        0       0                  6   256   # ambient.flowPort.medium.cv
  0       0                        0       0                  6   256   # ambient.flowPort.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient.flowPort.medium.nue
  0       0                        0       0                  6   452   # ambient.flowPort.m_flow
  0       0                        0       0                  6   260   # ambient.flowPort.h
  0       0                        0       0                  6   388   # ambient.flowPort.H_flow
  0       0                        0       0                  6   257   # ambient.usePressureInput
 -1 2.0000000000000000E+005        0       0                  1   280   # ambient.constantAmbientPressure
  0       0                        0       0                  6   257   # ambient.useTemperatureInput
 -1 2.8314999999999998E+002        0 1.0000000000000000E+100  1   280   # ambient.constantAmbientTemperature
  0       0                        0 1.0000000000000000E+100  6   256   # pump.medium.rho
  0       0                        0       0                  6   256   # pump.medium.cp
  0       0                        0       0                  6   256   # pump.medium.cv
  0       0                        0       0                  6   256   # pump.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump.medium.nue
  0       4                        0 1.0000000000000000E+100  6   256   # pump.m
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # pump.TInitial
  0       0                        0       0                  6   256   # pump.Q_flow
 -1       0                        0 1.0000000000000000E+100  2   272   # pump.T
  0       0                        0       0                  3   256   # pump.der(T)
  0       0                        0 1.0000000000000000E+100  6   256   # pump.T_a
  0       0                        0 1.0000000000000000E+100  6   256   # pump.T_b
  0       0                        0       0                  6   256   # pump.dT
  0       0                        0       0                  6   256   # pump.h
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_a.medium.nue
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # pump.flowPort_a.h
  0       0                        0       0                  6   388   # pump.flowPort_a.H_flow
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_b.medium.nue
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # pump.flowPort_b.h
  0       0                        0       0                  6   388   # pump.flowPort_b.H_flow
  0       0                        0       0                  6   257   # pump.useInput
 -1 2.0000000000000001E-001        0 1.0000000000000000E+100  1   280   # pump.m_flowNom
 -1   50000                        0       0                  1   280   # pump.dpFix
 -1 8.0000000000000004E-001        0       0                  1   280   # pump.etaTot
  0       0                        0       0                  6   256   # pump.PEl
  0       0                        0 1.0000000000000000E+100  6   256   # ambient1.medium.rho
  0       0                        0       0                  6   256   # ambient1.medium.cp
  0       0                        0       0                  6   256   # ambient1.medium.cv
  0       0                        0       0                  6   256   # ambient1.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient1.medium.nue
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # ambient1.T_port
  0       0                        0       0                  6  1280   # ambient1.h
  0       0                        0 1.0000000000000000E+100  6   256   # ambient1.flowPort.medium.rho
  0       0                        0       0                  6   256   # ambient1.flowPort.medium.cp
  0       0                        0       0                  6   256   # ambient1.flowPort.medium.cv
  0       0                        0       0                  6   256   # ambient1.flowPort.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient1.flowPort.medium.nue
  0       0                        0       0                  6   257   # ambient1.usePressureInput
 -1 6.0000000000000000E+005        0       0                  1   280   # ambient1.constantAmbientPressure
  0       0                        0       0                  6   257   # ambient1.useTemperatureInput
 -1 3.1314999999999998E+002        0 1.0000000000000000E+100  1   280   # ambient1.constantAmbientTemperature
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.medium.rho
  0       0                        0       0                  6   256   # mixingVolume.medium.cp
  0       0                        0       0                  6   256   # mixingVolume.medium.cv
  0       0                        0       0                  6   256   # mixingVolume.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.medium.nue
  0       3                        2 1.0000000000000000E+100  6   258   # mixingVolume.nbrPorts
 -1      10                        0 1.0000000000000000E+100  1   280   # mixingVolume.m
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # mixingVolume.TInitial
 -1       0                        0 1.0000000000000000E+100  2   272   # mixingVolume.T
  0       0                        0       0                  3   256   # mixingVolume.der(T)
  0       0                        0       0                  6   256   # mixingVolume.h
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[1].medium.rho
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[1].medium.cp
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[1].medium.cv
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[1].medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[1].medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[2].medium.rho
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[2].medium.cp
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[2].medium.cv
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[2].medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[2].medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[3].medium.rho
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[3].medium.cp
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[3].medium.cv
  0       0                        0       0                  6   256   # mixingVolume.flowPorts[3].medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # mixingVolume.flowPorts[3].medium.nue
  0       0                        0       0                  6   452   # mixingVolume.flowPorts[3].m_flow
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # mixingVolume.flowPorts[3].h
  0       0                        0       0                  6   388   # mixingVolume.flowPorts[3].H_flow
  0       0                        0 1.0000000000000000E+100  6   256   # ambient2.medium.rho
  0       0                        0       0                  6   256   # ambient2.medium.cp
  0       0                        0       0                  6   256   # ambient2.medium.cv
  0       0                        0       0                  6   256   # ambient2.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient2.medium.nue
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # ambient2.T_port
  0       0                        0       0                  6  1280   # ambient2.h
  0       0                        0 1.0000000000000000E+100  6   256   # ambient2.flowPort.medium.rho
  0       0                        0       0                  6   256   # ambient2.flowPort.medium.cp
  0       0                        0       0                  6   256   # ambient2.flowPort.medium.cv
  0       0                        0       0                  6   256   # ambient2.flowPort.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # ambient2.flowPort.medium.nue
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # ambient2.flowPort.h
  0       0                        0       0                  6   388   # ambient2.flowPort.H_flow
  0       0                        0       0                  6   257   # ambient2.usePressureInput
 -1 1.0000000000000000E+006        0       0                  1   280   # ambient2.constantAmbientPressure
  0       0                        0       0                  6   257   # ambient2.useTemperatureInput
 -1 3.1314999999999998E+002        0 1.0000000000000000E+100  1   280   # ambient2.constantAmbientTemperature
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.medium.rho
  0       0                        0       0                  6   256   # pump1.medium.cp
  0       0                        0       0                  6   256   # pump1.medium.cv
  0       0                        0       0                  6   256   # pump1.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.medium.nue
  0       4                        0 1.0000000000000000E+100  6   256   # pump1.m
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # pump1.TInitial
  0       0                        0       0                  6   256   # pump1.Q_flow
 -1       0                        0 1.0000000000000000E+100  2   272   # pump1.T
  0       0                        0       0                  3   256   # pump1.der(T)
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.T_a
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.T_b
  0       0                        0       0                  6   256   # pump1.dT
  0       0                        0       0                  6   256   # pump1.h
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # pump1.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # pump1.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # pump1.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.flowPort_a.medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # pump1.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # pump1.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # pump1.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump1.flowPort_b.medium.nue
  0       1                        0       0                  6   257   # pump1.useInput
 -1 5.0000000000000000E-001        0 1.0000000000000000E+100  1   280   # pump1.m_flowNom
 -1   50000                        0       0                  1   280   # pump1.dpFix
 -1 8.0000000000000004E-001        0       0                  1   280   # pump1.etaTot
  0       0                        0       0                  6   320   # pump1.PEl
  0       0                        0       1                  6   320   # pump1.m_flowSet
 -1 4.0000000000000002E-001        0       0                  1   280   # step.height
 -1       0                        0       0                  1   280   # step.offset
 -1    1000                        0       0                  1   280   # step.startTime


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable.
#           = 0: real.
#           = 1: boolean.
#           = 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(153,78)
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Temperature at flowPort_a [K|degC]
[J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[kg/s]
[J/kg]
[W]
Enable / disable pressure input [:#(type=Boolean)]
Ambient pressure [Pa|bar]
Enable / disable temperature input [:#(type=Boolean)]
Ambient temperature [K|degC]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Mass of medium [kg]
Initial temperature of all Temperature states [K|degC]
Heat exchange with ambient [W]
Outlet temperature of medium [K|degC]
der(Outlet temperature of medium) [K/s]
Temperature at flowPort_a [K|degC]
Temperature at flowPort_b [K|degC]
Outlet temperature minus inlet temperature [K,]
Medium's specific enthalpy [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[J/kg]
[W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[J/kg]
[W]
Enable / disable MassFlowRate input [:#(type=Boolean)]
Nominal mass flowrate [kg/s]
Fixed pressure drop, used for determining the electricity consumption [Pa|bar]
Fixed total pump efficiency [1]
Electricity consumption [W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Temperature at flowPort_a [K|degC]
[J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Enable / disable pressure input [:#(type=Boolean)]
Ambient pressure [Pa|bar]
Enable / disable temperature input [:#(type=Boolean)]
Ambient temperature [K|degC]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Number of fluid ports, min 2 [:#(type=Integer)]
Mass of the mixing volume [kg]
Initial temperature of the mass in the volume [K|degC]
Temperature of the fluid in the mixing volume [K|degC]
der(Temperature of the fluid in the mixing volume) [K/s]
Specific enthalpy of the fluid in the mixing volume [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[kg/s]
[J/kg]
[W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Temperature at flowPort_a [K|degC]
[J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[J/kg]
[W]
Enable / disable pressure input [:#(type=Boolean)]
Ambient pressure [Pa|bar]
Enable / disable temperature input [:#(type=Boolean)]
Ambient temperature [K|degC]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Mass of medium [kg]
Initial temperature of all Temperature states [K|degC]
Heat exchange with ambient [W]
Outlet temperature of medium [K|degC]
der(Outlet temperature of medium) [K/s]
Temperature at flowPort_a [K|degC]
Temperature at flowPort_b [K|degC]
Outlet temperature minus inlet temperature [K,]
Medium's specific enthalpy [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Enable / disable MassFlowRate input [:#(type=Boolean)]
Nominal mass flowrate [kg/s]
Fixed pressure drop, used for determining the electricity consumption [Pa|bar]
Fixed total pump efficiency [1]
Electricity consumption [W]
[1]
Height of step
Offset of output signal y
Output y = offset for time < startTime [s]

