#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
   40000                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(252,42)
sim.QHourly.timestep
sim.Uccle.lat
sim.Uccle.lon
sim.Uccle.Tdes
sim.Uccle.TdesGround
sim.Uccle.timZonSta
sim.Uccle.DST
sim.Uccle.yr
sim.stoch33.nOcc
sim.detail.timestep
sim.city.lat
sim.city.lon
sim.city.Tdes
sim.city.TdesGround
sim.city.timZonSta
sim.city.DST
sim.city.yr
sim.occBeh
sim.DHW
sim.PV
sim.occupants.nOcc
sim.nOcc
sim.nPV
sim.PNom
sim.lat
sim.lon
sim.Tdes
sim.TdesGround
sim.timZonSta
sim.DST
sim.yr
sim.BesTest
sim.solDirPer
sim.solDirHor
sim.solDifHor
sim.solGloHor
sim.Te
sim.Tsky
sim.Va
sim.Fc
sim.irr
sim.summer
sim.day
sim.timMan.lon
sim.timMan.delay
sim.timMan.timZonSta
sim.timMan.DST
sim.timMan.yr
sim.timMan.ifSolCor
sim.timMan.timCalSol
sim.timMan.summer
sim.timMan.localTime.lon
sim.timMan.solarTime.timLoc
sim.timMan.solarTime.timSim
sim.timMan.solarTime.timSol
sim.timMan.solarTime.Bt
sim.timMan.solarTime.delta
sim.timMan.solarTime.nDay
sim.timMan.calendarTime.ifSolCor
sim.timMan.simulationDelay.delay
sim.timMan.timeZone.timZonSta
sim.timMan.timeZone.DST
sim.timMan.timeZone.yr
sim.timMan.timeZone.DSTstart
sim.timMan.timeZone.DSTend
sim.timMan.timeZone.summer
sim.climate_nonSolar.tableOnFile
sim.climate_nonSolar.columns[1]
sim.climate_nonSolar.columns[2]
sim.climate_nonSolar.columns[3]
sim.climate_nonSolar.columns[4]
sim.climate_nonSolar.smoothness
sim.climate_nonSolar.nout
sim.climate_nonSolar.y[1]
sim.climate_nonSolar.y[2]
sim.climate_nonSolar.y[3]
sim.climate_nonSolar.y[4]
sim.climate_nonSolar.tableID
sim.climate_solar.tableOnFile
sim.climate_solar.columns[1]
sim.climate_solar.columns[2]
sim.climate_solar.columns[3]
sim.climate_solar.smoothness
sim.climate_solar.nout
sim.climate_solar.tableID
absolutePressure.medium.rho
absolutePressure.medium.cp
absolutePressure.medium.cv
absolutePressure.medium.lamda
absolutePressure.medium.nue
absolutePressure.p
absolutePressure.flowPort.medium.rho
absolutePressure.flowPort.medium.cp
absolutePressure.flowPort.medium.cv
absolutePressure.flowPort.medium.lamda
absolutePressure.flowPort.medium.nue
absolutePressure.flowPort.m_flow
absolutePressure.flowPort.h
absolutePressure.flowPort.H_flow
pump.medium.rho
pump.medium.cp
pump.medium.cv
pump.medium.lamda
pump.medium.nue
pump.m
pump.TInitial
pump.Q_flow
pump.T
pump.der(T)
pump.T_a
pump.T_b
pump.dT
pump.h
pump.flowPort_a.medium.rho
pump.flowPort_a.medium.cp
pump.flowPort_a.medium.cv
pump.flowPort_a.medium.lamda
pump.flowPort_a.medium.nue
pump.flowPort_a.m_flow
pump.flowPort_a.h
pump.flowPort_a.H_flow
pump.flowPort_b.medium.rho
pump.flowPort_b.medium.cp
pump.flowPort_b.medium.cv
pump.flowPort_b.medium.lamda
pump.flowPort_b.medium.nue
pump.flowPort_b.H_flow
pump.useInput
pump.m_flowNom
pump.dpFix
pump.etaTot
pump.PEl
pump.m_flowSet
pipe.medium.rho
pipe.medium.cp
pipe.medium.cv
pipe.medium.lamda
pipe.medium.nue
pipe.m
pipe.TInitial
pipe.Q_flow
pipe.T
pipe.der(T)
pipe.T_a
pipe.T_b
pipe.dT
pipe.h
pipe.flowPort_a.medium.rho
pipe.flowPort_a.medium.cp
pipe.flowPort_a.medium.cv
pipe.flowPort_a.medium.lamda
pipe.flowPort_a.medium.nue
pipe.flowPort_a.h
pipe.flowPort_a.H_flow
pipe.flowPort_b.medium.rho
pipe.flowPort_b.medium.cp
pipe.flowPort_b.medium.cv
pipe.flowPort_b.medium.lamda
pipe.flowPort_b.medium.nue
heater.heaterType
heater.TInitial
heater.QNom
heater.medium.rho
heater.medium.cp
heater.medium.cv
heater.medium.lamda
heater.medium.nue
heater.PFuel
heater.tauHeatLoss
heater.mWater
heater.cDry
heater.UALoss
heater.heatedFluid.medium.rho
heater.heatedFluid.medium.cp
heater.heatedFluid.medium.cv
heater.heatedFluid.medium.lamda
heater.heatedFluid.medium.nue
heater.heatedFluid.m
heater.heatedFluid.TInitial
heater.heatedFluid.Q_flow
heater.heatedFluid.T_a
heater.heatedFluid.T_b
heater.heatedFluid.dT
heater.heatedFluid.h
heater.heatedFluid.flowPort_a.medium.rho
heater.heatedFluid.flowPort_a.medium.cp
heater.heatedFluid.flowPort_a.medium.cv
heater.heatedFluid.flowPort_a.medium.lamda
heater.heatedFluid.flowPort_a.medium.nue
heater.heatedFluid.flowPort_b.medium.rho
heater.heatedFluid.flowPort_b.medium.cp
heater.heatedFluid.flowPort_b.medium.cv
heater.heatedFluid.flowPort_b.medium.lamda
heater.heatedFluid.flowPort_b.medium.nue
heater.flowPort_a.medium.rho
heater.flowPort_a.medium.cp
heater.flowPort_a.medium.cv
heater.flowPort_a.medium.lamda
heater.flowPort_a.medium.nue
heater.flowPort_b.medium.rho
heater.flowPort_b.medium.cp
heater.flowPort_b.medium.cv
heater.flowPort_b.medium.lamda
heater.flowPort_b.medium.nue
heater.mDry.C
heater.mDry.T
heater.mDry.der(T)
heater.mDry.port.Q_flow
heater.thermalLosses.dT
heater.thermalLosses.G
heater.heatPort.Q_flow
heater.TSet
heater.PEl
heater.eta
heater.heatSource.medium.rho
heater.heatSource.medium.cp
heater.heatSource.medium.cv
heater.heatSource.medium.lamda
heater.heatSource.medium.nue
heater.heatSource.QAsked
heater.heatSource.UALoss
heater.heatSource.TBoilerSet
heater.heatSource.kgps2lph
heater.heatSource.QLossesToCompensate
fixedTemperature.T
pulse.table[1, 1]
pulse.table[1, 2]
pulse.table[2, 1]
pulse.table[2, 2]
pulse.table[3, 1]
pulse.table[3, 2]
pulse.table[4, 1]
pulse.table[4, 2]
pulse.table[5, 1]
pulse.table[5, 2]
pulse.table[6, 1]
pulse.table[6, 2]
pulse.table[7, 1]
pulse.table[7, 2]
pulse.offset
pulse.startTime
pulse.y
pulse.a
pulse.b
pulse.last
pulse.nextEvent
sine.amplitude
sine.freqHz
sine.phase
sine.offset
sine.startTime
sine.pi

double initialValue(252,6)
 -1     900                        0       0                  1  1304   # sim.QHourly.timestep
 -1 8.8662726001311931E-001        0       0                  1  1304   # sim.Uccle.lat
 -1 7.5345863808595218E-002        0       0                  1  1304   # sim.Uccle.lon
 -1 2.6514999999999998E+002        0 1.0000000000000000E+100  1  1304   # sim.Uccle.Tdes
 -1 2.8414999999999998E+002        0 1.0000000000000000E+100  1  1304   # sim.Uccle.TdesGround
 -1    3600                        0       0                  1  1304   # sim.Uccle.timZonSta
 -1       1                        0       0                  1  1305   # sim.Uccle.DST
 -1    2010                        0       0                  1  1306   # sim.Uccle.yr
 -1      33                        0       0                  1  1306   # sim.stoch33.nOcc
  0       0                        0       0                  6   256   # sim.detail.timestep
  0       0                        0       0                  6   256   # sim.city.lat
  0       0                        0       0                  6   256   # sim.city.lon
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # sim.city.Tdes
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # sim.city.TdesGround
  0       0                        0       0                  6   256   # sim.city.timZonSta
  0       0                        0       0                  6   257   # sim.city.DST
  0       0                        0       0                  6   258   # sim.city.yr
  0       0                        0       0                  6   257   # sim.occBeh
  0       0                        0       0                  6   257   # sim.DHW
  0       0                        0       0                  6   257   # sim.PV
  0       0                        0       0                  6   258   # sim.occupants.nOcc
 -1      33                        0       0                  1   282   # sim.nOcc
 -1      33                        0       0                  1   282   # sim.nPV
 -1    1000                        0       0                  1   282   # sim.PNom
  0       0                        0       0                  6  1280   # sim.lat
  0       0                        0       0                  6  1280   # sim.lon
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6  1280   # sim.Tdes
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6  1280   # sim.TdesGround
  0       0                        0       0                  6  1280   # sim.timZonSta
  0       0                        0       0                  6  1281   # sim.DST
  0       0                        0       0                  6  1282   # sim.yr
  0       0                        0       0                  6  1281   # sim.BesTest
  0       0                        0       0                  6   256   # sim.solDirPer
  0       0                        0       0                  6   256   # sim.solDirHor
  0       0                        0       0                  6   256   # sim.solDifHor
  0       0                        0       0                  6   256   # sim.solGloHor
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # sim.Te
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # sim.Tsky
  0 2.5000000000000000E+000        0       0                  6   256   # sim.Va
  0 2.0000000000000001E-001        0       0                  6   256   # sim.Fc
  0       0                        0       0                  6   256   # sim.irr
  0       0                        0       0                  6   257   # sim.summer
  0       1                        0       0                  6   257   # sim.day
  0       0                        0       0                  6  1280   # sim.timMan.lon
  0       0                        0       0                  6  1280   # sim.timMan.delay
  0       0                        0       0                  6  1280   # sim.timMan.timZonSta
  0       0                        0       0                  6  1281   # sim.timMan.DST
  0    2010                        0       0                  6  1282   # sim.timMan.yr
  0       1                        0       0                  6  1281   # sim.timMan.ifSolCor
  0       0                        0       0                  6  1280   # sim.timMan.timCalSol
  0       0                        0       0                  6  1281   # sim.timMan.summer
  0       0                        0       0                  6  1280   # sim.timMan.localTime.lon
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.timLoc
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.timSim
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.timSol
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.Bt
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.delta
  0       0                        0       0                  6  1280   # sim.timMan.solarTime.nDay
  0       1                        0       0                  6  1281   # sim.timMan.calendarTime.ifSolCor
  0       0                        0       0                  6  1280   # sim.timMan.simulationDelay.delay
  0       0                        0       0                  6  1280   # sim.timMan.timeZone.timZonSta
  0       0                        0       0                  6  1281   # sim.timMan.timeZone.DST
  0    2010                        0       0                  6  1282   # sim.timMan.timeZone.yr
  0 7.4808000000000000E+006        0       0                  6  1280   # sim.timMan.timeZone.DSTstart
  0 2.6229600000000000E+007        0       0                  6  1280   # sim.timMan.timeZone.DSTend
  0       0                        0       0                  6  1281   # sim.timMan.timeZone.summer
  0       1                        0       0                  6  1281   # sim.climate_nonSolar.tableOnFile
  0      15                        0       0                  6  1282   # sim.climate_nonSolar.columns[1]
  0      16                        0       0                  6  1282   # sim.climate_nonSolar.columns[2]
  0      12                        0       0                  6  1282   # sim.climate_nonSolar.columns[3]
  0      10                        0       0                  6  1282   # sim.climate_nonSolar.columns[4]
  0       2                        1       2                  6  1282   # sim.climate_nonSolar.smoothness
  0       4                        0       0                  6  1282   # sim.climate_nonSolar.nout
  0       0                        0       0                  6  1280   # sim.climate_nonSolar.y[1]
  0       0                        0       0                  6  1280   # sim.climate_nonSolar.y[2]
  0       0                        0       0                  6  1280   # sim.climate_nonSolar.y[3]
  0       0                        0       0                  6  1280   # sim.climate_nonSolar.y[4]
  0       0                        0       0                  6  1282   # sim.climate_nonSolar.tableID
  0       1                        0       0                  6  1281   # sim.climate_solar.tableOnFile
  0       7                        0       0                  6  1282   # sim.climate_solar.columns[1]
  0      11                        0       0                  6  1282   # sim.climate_solar.columns[2]
  0      14                        0       0                  6  1282   # sim.climate_solar.columns[3]
  0       1                        1       2                  6  1282   # sim.climate_solar.smoothness
  0       3                        0       0                  6  1282   # sim.climate_solar.nout
  0       0                        0       0                  6  1282   # sim.climate_solar.tableID
 -1 9.9560000000000002E+002        0 1.0000000000000000E+100  1   280   # absolutePressure.medium.rho
 -1    4177                        0       0                  1   280   # absolutePressure.medium.cp
 -1    4177                        0       0                  1   280   # absolutePressure.medium.cv
 -1 6.1499999999999999E-001        0       0                  1   280   # absolutePressure.medium.lamda
 -1 7.9999999999999996E-007        0 1.0000000000000000E+100  1   280   # absolutePressure.medium.nue
 -1 2.0000000000000000E+005        0       0                  1   280   # absolutePressure.p
  0       0                        0 1.0000000000000000E+100  6   256   # absolutePressure.flowPort.medium.rho
  0       0                        0       0                  6   256   # absolutePressure.flowPort.medium.cp
  0       0                        0       0                  6   256   # absolutePressure.flowPort.medium.cv
  0       0                        0       0                  6   256   # absolutePressure.flowPort.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # absolutePressure.flowPort.medium.nue
  0       0                        0       0                  6   388   # absolutePressure.flowPort.m_flow
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # absolutePressure.flowPort.h
  0       0                        0       0                  6   388   # absolutePressure.flowPort.H_flow
 -1 9.9560000000000002E+002        0 1.0000000000000000E+100  1   280   # pump.medium.rho
 -1    4177                        0       0                  1   280   # pump.medium.cp
 -1    4177                        0       0                  1   280   # pump.medium.cv
 -1 6.1499999999999999E-001        0       0                  1   280   # pump.medium.lamda
 -1 7.9999999999999996E-007        0 1.0000000000000000E+100  1   280   # pump.medium.nue
  0       1                        0 1.0000000000000000E+100  6   256   # pump.m
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # pump.TInitial
  0       0                        0       0                  6   256   # pump.Q_flow
 -1       0                        0 1.0000000000000000E+100  2   272   # pump.T
  0       0                        0       0                  3   256   # pump.der(T)
  0       0                        0 1.0000000000000000E+100  6   256   # pump.T_a
  0       0                        0 1.0000000000000000E+100  6   256   # pump.T_b
  0       0                        0       0                  6   256   # pump.dT
  0       0                        0       0                  6   256   # pump.h
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # pump.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_a.medium.nue
  0       0                        0       0                  6   388   # pump.flowPort_a.m_flow
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # pump.flowPort_a.h
  0       0                        0       0                  6   388   # pump.flowPort_a.H_flow
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # pump.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pump.flowPort_b.medium.nue
  0       0                        0       0                  6   388   # pump.flowPort_b.H_flow
  0       1                        0       0                  6   257   # pump.useInput
 -1 3.6111111111111110E-001        0 1.0000000000000000E+100  1   280   # pump.m_flowNom
 -1   50000                        0       0                  1   280   # pump.dpFix
 -1 8.0000000000000004E-001        0       0                  1   280   # pump.etaTot
  0       0                        0       0                  6   256   # pump.PEl
  0       0                        0       1                  6   256   # pump.m_flowSet
 -1 9.9560000000000002E+002        0 1.0000000000000000E+100  1   280   # pipe.medium.rho
 -1    4177                        0       0                  1   280   # pipe.medium.cp
 -1    4177                        0       0                  1   280   # pipe.medium.cv
 -1 6.1499999999999999E-001        0       0                  1   280   # pipe.medium.lamda
 -1 7.9999999999999996E-007        0 1.0000000000000000E+100  1   280   # pipe.medium.nue
  0       5                        0 1.0000000000000000E+100  6   256   # pipe.m
 -1 3.1314999999999998E+002        0 1.0000000000000000E+100  1   280   # pipe.TInitial
  0       0                        0       0                  6   256   # pipe.Q_flow
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.T
  0       0                        0       0                  6   256   # pipe.der(T)
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.T_a
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.T_b
  0       0                        0       0                  6   256   # pipe.dT
  0       0                        0       0                  6   256   # pipe.h
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # pipe.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # pipe.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # pipe.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.flowPort_a.medium.nue
  0 1.1409470000000000E+006  1140947 1.5586470000000000E+006  6   260   # pipe.flowPort_a.h
  0       0                        0       0                  6   388   # pipe.flowPort_a.H_flow
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # pipe.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # pipe.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # pipe.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # pipe.flowPort_b.medium.nue
  0       4                        1       4                  6   258   # heater.heaterType
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # heater.TInitial
  0       1                        0       0                  6   256   # heater.QNom
 -1 9.9560000000000002E+002        0 1.0000000000000000E+100  1   280   # heater.medium.rho
 -1    4177                        0       0                  1   280   # heater.medium.cp
 -1    4177                        0       0                  1   280   # heater.medium.cv
 -1 6.1499999999999999E-001        0       0                  1   280   # heater.medium.lamda
 -1 7.9999999999999996E-007        0 1.0000000000000000E+100  1   280   # heater.medium.nue
  0       0                        0       0                  6   256   # heater.PFuel
 -1    3600                        0       0                  1   280   # heater.tauHeatLoss
  0       0                        0 1.0000000000000000E+100  6   256   # heater.mWater
  0 1.0000000000000001E-001        0       0                  6   256   # heater.cDry
  0       0                        0       0                  6   256   # heater.UALoss
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.medium.rho
  0       0                        0       0                  6   256   # heater.heatedFluid.medium.cp
  0       0                        0       0                  6   256   # heater.heatedFluid.medium.cv
  0       0                        0       0                  6   256   # heater.heatedFluid.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.m
  0 2.8814999999999998E+002        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.TInitial
  0       0                        0       0                  6   256   # heater.heatedFluid.Q_flow
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.T_a
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.T_b
  0       0                        0       0                  6   256   # heater.heatedFluid.dT
  0       0                        0       0                  6   256   # heater.heatedFluid.h
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.flowPort_a.medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # heater.heatedFluid.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatedFluid.flowPort_b.medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # heater.flowPort_a.medium.rho
  0       0                        0       0                  6   256   # heater.flowPort_a.medium.cp
  0       0                        0       0                  6   256   # heater.flowPort_a.medium.cv
  0       0                        0       0                  6   256   # heater.flowPort_a.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.flowPort_a.medium.nue
  0       0                        0 1.0000000000000000E+100  6   256   # heater.flowPort_b.medium.rho
  0       0                        0       0                  6   256   # heater.flowPort_b.medium.cp
  0       0                        0       0                  6   256   # heater.flowPort_b.medium.cv
  0       0                        0       0                  6   256   # heater.flowPort_b.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.flowPort_b.medium.nue
  0 1.0000000000000001E-001        0       0                  6   256   # heater.mDry.C
 -1       0                        0 1.0000000000000000E+100  2   272   # heater.mDry.T
  0       0                        0       0                  3   256   # heater.mDry.der(T)
  0       0                        0       0                  6   388   # heater.mDry.port.Q_flow
  0       0                        0       0                  6   256   # heater.thermalLosses.dT
  0       0                        0       0                  6   256   # heater.thermalLosses.G
  0       0                        0       0                  6   388   # heater.heatPort.Q_flow
  0 3.5514999999999998E+002        0       0                  6   256   # heater.TSet
  0       0                        0       0                  6   256   # heater.PEl
  0       1                        0       0                  6   256   # heater.eta
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatSource.medium.rho
  0       0                        0       0                  6   256   # heater.heatSource.medium.cp
  0       0                        0       0                  6   256   # heater.heatSource.medium.cv
  0       0                        0       0                  6   256   # heater.heatSource.medium.lamda
  0       0                        0 1.0000000000000000E+100  6   256   # heater.heatSource.medium.nue
  0       0                        0       0                  6   256   # heater.heatSource.QAsked
  0       0                        0       0                  6   256   # heater.heatSource.UALoss
  0 3.5514999999999998E+002        0 1.0000000000000000E+100  6   256   # heater.heatSource.TBoilerSet
  0       0                        0       0                  6  1280   # heater.heatSource.kgps2lph
  0       0                        0       0                  6  1280   # heater.heatSource.QLossesToCompensate
 -1 2.9314999999999998E+002        0 1.0000000000000000E+100  1   280   # fixedTemperature.T
 -1       0                        0       0                  1   280   # pulse.table[1, 1]
 -1       0                        0       0                  1   280   # pulse.table[1, 2]
 -1    5000                        0       0                  1   280   # pulse.table[2, 1]
 -1       0                        0       0                  1   280   # pulse.table[2, 2]
 -1    5000                        0       0                  1   280   # pulse.table[3, 1]
 -1     400                        0       0                  1   280   # pulse.table[3, 2]
 -1   10000                        0       0                  1   280   # pulse.table[4, 1]
 -1     400                        0       0                  1   280   # pulse.table[4, 2]
 -1   10000                        0       0                  1   280   # pulse.table[5, 1]
 -1    1000                        0       0                  1   280   # pulse.table[5, 2]
 -1   25000                        0       0                  1   280   # pulse.table[6, 1]
 -1    1000                        0       0                  1   280   # pulse.table[6, 2]
 -1   30000                        0       0                  1   280   # pulse.table[7, 1]
 -1    1300                        0       0                  1   280   # pulse.table[7, 2]
 -1       0                        0       0                  1   280   # pulse.offset
 -1       0                        0       0                  1   280   # pulse.startTime
  0       0                        0       0                  6   256   # pulse.y
  0       0                        0       0                  6  1344   # pulse.a
  0       0                        0       0                  6  1344   # pulse.b
  0       1                        0       0                  6  1346   # pulse.last
  0       0                        0       0                  6  1352   # pulse.nextEvent
 -1      30                        0       0                  1   280   # sine.amplitude
 -1 2.0000000000000001E-004        0       0                  1   280   # sine.freqHz
 -1       0                        0       0                  1   280   # sine.phase
 -1 3.2314999999999998E+002        0       0                  1   280   # sine.offset
 -1   20000                        0       0                  1   280   # sine.startTime
  0 3.1415926535897931E+000        0       0                  6  1280   # sine.pi


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable.
#           = 0: real.
#           = 1: boolean.
#           = 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(252,124)
[s]
latitude of the locatioin [rad|degree]
longitude of the locatioin [rad|degree]
Design outdoor temperature [K|degC]
Design ground temperature [K|degC]
Standard (winter) time zone [s]
Take into account daylight saving time or not [:#(type=Boolean)]
Ddepcited year for DST only [:#(type=Integer)]
Number of occupant data sets to be read [:#(type=Integer)]
[s]
latitude of the locatioin [rad|degree]
longitude of the locatioin [rad|degree]
Design outdoor temperature [K|degC]
Design ground temperature [K|degC]
Standard (winter) time zone [s]
Take into account daylight saving time or not [:#(type=Boolean)]
Ddepcited year for DST only [:#(type=Integer)]
put to true if  user behaviour is to be read from files [:#(type=Boolean)]
put to true if domestic how water (DHW) consumption is to be read from files [:#(type=Boolean)]
put to true if photovoltaics is to be read from files  [:#(type=Boolean)]
Number of occupant data sets to be read [:#(type=Integer)]
Number of occupant profiles to be read [:#(type=Integer)]
Number of photovoltaic profiles [:#(type=Integer)]
Nominal power (W) of the photovoltaic profiles [:#(type=Integer)]
latitude of the locatioin [rad|deg]
[rad|deg]
design outdoor temperature [K|degC]
design ground temperature [K|degC]
standard time zone [s]
boolean to take into account daylight saving time [:#(type=Boolean)]
depcited year for DST only [:#(type=Integer)]
boolean to determine if this simulation is a BESTEST simulation [:#(type=Boolean)]
direct irradiation on normal to solar zenith [W/m2]
direct irradiation on horizontal surface [W/m2]
difuse irradiation on horizontal surface [W/m2]
global irradiation on horizontal [W/m2]
ambient outdoor temperature for determination of sky radiation exchange [K|degC]
effective overall sky temperature [K|degC]
air velocity [m/s]
cloud factor
[W/m2]
[:#(type=Boolean)]
[:#(type=Boolean)]
longitude [rad|deg]
delay for solar data [s|s]
standard time zone [s]
take into account daylight saving time [:#(type=Boolean)]
depcited year for DST only [:#(type=Integer)]
[:#(type=Boolean)]
calendar time for solar data [s]
[:#(type=Boolean)]
longitude [rad|deg]
[s]
[s]
[s]
[rad|deg]
difference of solar time to local time [s]
Zero-based day number in seconds [s]
[:#(type=Boolean)]
[s]
standard time zone [s]
[:#(type=Boolean)]
depcited year [:#(type=Integer)]
[s]
[s]
[:#(type=Boolean)]
true, if table is defined on file or in function usertab [:#(type=Boolean)]
columns of table to be interpolated [:#(type=Integer)]
columns of table to be interpolated [:#(type=Integer)]
columns of table to be interpolated [:#(type=Integer)]
columns of table to be interpolated [:#(type=Integer)]
smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
[:#(type=Integer)]
true, if table is defined on file or in function usertab [:#(type=Boolean)]
columns of table to be interpolated [:#(type=Integer)]
columns of table to be interpolated [:#(type=Integer)]
columns of table to be interpolated [:#(type=Integer)]
smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Number of outputs [:#(type=Integer)]
[:#(type=Integer)]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Pressure ground [Pa|bar]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[kg/s]
[J/kg]
[W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Mass of medium [kg]
Initial temperature of all Temperature states [K|degC]
Heat exchange with ambient [W]
Outlet temperature of medium [K|degC]
der(Outlet temperature of medium) [K/s]
Temperature at flowPort_a [K|degC]
Temperature at flowPort_b [K|degC]
Outlet temperature minus inlet temperature [K,]
Medium's specific enthalpy [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[kg/s]
[J/kg]
[W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[W]
Enable / disable MassFlowRate input [:#(type=Boolean)]
Nominal mass flowrate [kg/s]
Fixed pressure drop, used for determining the electricity consumption [Pa|bar]
Fixed total pump efficiency [1]
Electricity consumption [W]
[1]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Mass of medium [kg]
Initial temperature of all Temperature states [K|degC]
Heat exchange with ambient [W]
Outlet temperature of medium [K|degC]
der(Outlet temperature of medium) [K/s]
Temperature at flowPort_a [K|degC]
Temperature at flowPort_b [K|degC]
Outlet temperature minus inlet temperature [K,]
Medium's specific enthalpy [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[J/kg]
[W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Type of the heater, is used mainly for post processing [:#(type=IDEAS.Thermal.Components.Production.BaseClasses.HeaterType)]
Initial temperature of the water and dry mass [K|degC]
Nominal power [W]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Fuel consumption [W]
Time constant of environmental heat losses [s]
Mass of water in the condensor [kg]
Capacity of dry material lumped to condensor [J/K]
[W/K]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Mass of medium [kg]
Initial temperature of all Temperature states [K|degC]
Heat exchange with ambient [W]
Temperature at flowPort_a [K|degC]
Temperature at flowPort_b [K|degC]
Outlet temperature minus inlet temperature [K,]
Medium's specific enthalpy [J/kg]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Temperature setpoint, acts as on/off signal too [K]
Electrical consumption
Instanteanous efficiency
Density [kg/m3|g/cm3]
Specific heat capacity at constant pressure [J/(kg.K)]
Specific heat capacity at constant volume [J/(kg.K)]
Thermal conductivity [W/(m.K)]
Kinematic viscosity [m2/s]
[W]
UA of heat losses of HP to environment [W/K]
Condensor setpoint temperature.  Not always possible to reach it [K|degC]
Conversion from kg/s to l/h
Environment losses [W]
Fixed temperature at port [K|degC]
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Interpolation coefficients a of actual interval (y=a*x+b)
Interpolation coefficients b of actual interval (y=a*x+b)
Last used lower grid index [:#(type=Integer)]
Next event instant [s]
Amplitude of sine wave
Frequency of sine wave [Hz]
Phase of sine wave [rad|deg]
Offset of output signal [K]
Output = offset for time < startTime [s]


