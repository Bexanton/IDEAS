within IDEAS;
package Management

package System


end System;

package Occupants

package Comfort

package Elements

  block PPD "predicted percentage of dissatisfied"

  extends Modelica.Blocks.Interfaces.BlockIcon;

    Modelica.Blocks.Interfaces.RealInput PMV "predicted mean vote"
      annotation (Placement(transformation(extent={{-120,40},{-80,80}})));
    Modelica.Blocks.Interfaces.RealOutput PPD
            "predicted percentage of dissatisfied"
      annotation (Placement(transformation(extent={{90,50},{110,70}})));

  algorithm
    PPD := 100-95*exp(-0.003353*PMV^4-0.2179*PMV^2);

    annotation (Icon(graphics),  Diagram(graphics));
  end PPD;

  block PMV "predicted mean vote"

  extends Modelica.Blocks.Interfaces.BlockIcon;

    Modelica.Blocks.Interfaces.RealOutput PMV "predicted mean vote"
      annotation (Placement(transformation(extent={{90,30},{110,50}})));
    Modelica.Blocks.Interfaces.RealInput Trad "radiative zone temperature"
      annotation (Placement(transformation(extent={{-20,-20},{20,20}},
          rotation=90,
          origin={20,-100})));
    Modelica.Blocks.Interfaces.RealInput Tair "convective zone temperature"
      annotation (Placement(transformation(extent={{-20,-20},{20,20}},
          rotation=90,
          origin={-40,-100})));
    Modelica.Blocks.Interfaces.RealInput Tclo "clothing surface temperature" annotation (Placement(transformation(
          extent={{-20,-20},{20,20}},
          rotation=0,
          origin={-100,40})));
    Modelica.Blocks.Interfaces.RealInput CloFrac "clothing fraction" annotation (Placement(
          transformation(
          extent={{-20,-20},{20,20}},
          rotation=-90,
          origin={20,100})));

    parameter Modelica.SIunits.Area Adu = 1.77 "DuBois Area";
    parameter Modelica.SIunits.Efficiency Eta = 0.1
            "external mechanical efficiency of the body";
    parameter Modelica.SIunits.HeatFlowRate Met = 120 "Metabolic rate";
    parameter Real RelHum = 0.50 "Relative humidity";
    parameter Boolean Linear = true;

    constant Real Cb = 5.67 "black body constant";
    constant Real b = 0.82 "linearization fit";
    final parameter Real Meta = Met/Adu "Specific metabolic rate";

        protected
    Real Conv "convective surface coefficient";
    Modelica.SIunits.Temperature DTr4
            "Linearized or not linearized radiative delta T^4";
    Modelica.SIunits.Pressure Pvp "partial water vapour pressure";

  algorithm
  if Linear then
    DTr4 := b*Cb/Modelica.Constants.sigma*(Tclo-Tair);
  else
    DTr4 := (Tclo-Tair)*(Tclo+Tair)*(Tclo^2+Tair^2);
  end if;

  Pvp := RelHum*611*exp(17.08*(Tair-273.15)/(234.18 +(Tair-273.15)))/1000;
  Conv := 5; /*2.05*(Tclo-Tair)^0.25;*/

  PMV := (0.303*exp(-0.036*Meta) + 0.028)*(Meta - 3.96*10^(-8)*CloFrac*DTr4- CloFrac*Conv*(Tclo-Tair) - 3.05*(5.73 -
      0.007*Meta - Pvp) - 0.42*(Meta - 58.15) - 0.0173*Meta*(5.87 - Pvp) - 0.0014*Meta*(307.15 - Tair));

    annotation (Diagram(graphics), Icon(graphics));
  end PMV;

  block Clo "clothing"

  extends Modelica.Blocks.Interfaces.BlockIcon;

    Modelica.Blocks.Interfaces.RealOutput RClo "clothing thermal resistance"
      annotation (Placement(transformation(extent={{90,30},{110,50}})));
    Modelica.Blocks.Interfaces.RealOutput CloFrac "clothign fraction"
      annotation (Placement(transformation(extent={{90,-30},{110,-10}})));
    outer Commons.SimInfoManager sim
      annotation (Placement(transformation(extent={{-80,60},{-60,80}})));

    parameter Real CloWin = 0.9 "Clo value for winter conditions";
    parameter Real CloSum = 0.5 "Clo valie for summer conditions";

  equation
   if noEvent(sim.TeAv > 22 + 273.15) then
     RClo = 0.155*CloSum;
   else
     RClo = 0.155*CloWin;
   end if;

   if noEvent(RClo > 0.078) then
     CloFrac = 1.05 + 0.645*RClo;
   else
     CloFrac= 1.00 + 1.29*RClo;
   end if;

    annotation (Icon(graphics));
  end Clo;

  block Tclo "clothing surface temperature"

  extends Modelica.Blocks.Interfaces.BlockIcon;

    Modelica.Blocks.Interfaces.RealOutput Tclo "clothing surface temperature"
      annotation (Placement(transformation(extent={{90,30},{110,50}})));
    Modelica.Blocks.Interfaces.RealInput Trad "radiative zone temperature"
      annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={20,-100})));
    Modelica.Blocks.Interfaces.RealInput Tair "convective zone temperature"
      annotation (Placement(transformation(extent={{20,-20},{-20,20}},
              rotation=-90,
              origin={-40,-100})));
    Modelica.Blocks.Interfaces.RealInput RClo "clothing thermal resistance" annotation (Placement(transformation(
          extent={{-20,-20},{20,20}},
          rotation=-90,
          origin={-40,100})));
    Modelica.Blocks.Interfaces.RealInput CloFrac "clothign fraction" annotation (Placement(
          transformation(
          extent={{-20,-20},{20,20}},
          rotation=-90,
          origin={20,100})));

    parameter Modelica.SIunits.Area Adu = 1.77 "DuBois Area";
    parameter Modelica.SIunits.Efficiency Eta = 0.1
            "external mechanical efficiency of the body";
    parameter Modelica.SIunits.HeatFlowRate Met = 120 "Metabolic rate";
    parameter Boolean Linear = true;
    parameter Modelica.SIunits.Velocity VelVen=0.2;

    constant Real Cb = 5.67 "black body constant";
    constant Real b = 0.82 "linearization fit";
    final parameter Real Meta = Met/Adu "Specific metabolic rate";

        protected
    Real Conv "convective surface coefficient";
    Real DTr4 "Linearized or not linearized radiative delta T^4";

  equation
  if Linear then
    DTr4 = b*Cb/Modelica.Constants.sigma*(Tclo-Tair);
  else
    DTr4 = (Tclo-Tair)*(Tclo+Tair)*(Tclo^2+Tair^2);
  end if;

  if noEvent(65*(Tclo-Tair) > 21435.89*VelVen) then
    Conv = 2.38*(Tclo-Tair)^0.25;
  else
    Conv = 12.1*VelVen^0.5;
  end if;

  Tclo=(35.7-0.028*Meta - RClo*(3.96*10^(-8)*CloFrac*DTr4+CloFrac*Conv*(Tclo-Tair)))+273.15;

    annotation (Diagram(graphics), Icon(graphics));
  end Tclo;

  annotation (             Icon(coordinateSystem(
        preserveAspectRatio=false,
        extent={{-100,-100},{100,100}},
        grid={1,1}), graphics={
        Rectangle(
          extent={{-100,-100},{80,50}},
          lineColor={175,175,175},
          fillColor={248,248,255},
          fillPattern=FillPattern.Solid),
        Polygon(
          points={{-100,50},{-80,70},{100,70},{80,50},{-100,50}},
          lineColor={175,175,175},
          fillColor={248,248,255},
          fillPattern=FillPattern.Solid),
        Polygon(
          points={{100,70},{100,-80},{80,-100},{80,50},{100,70}},
          lineColor={175,175,175},
          fillColor={248,248,255},
          fillPattern=FillPattern.Solid)}));

end Elements;

  block Fanger "fanger model"

  extends Modelica.Blocks.Interfaces.BlockIcon;

    parameter Boolean Linear = true;

    Modelica.Blocks.Interfaces.RealOutput PMV "predicted mean vote" annotation (Placement(transformation(extent={{90,30},
              {110,50}})));

    Modelica.Blocks.Interfaces.RealOutput PPD
          "predicted percentage dissatisfied"                                     annotation (Placement(transformation(extent={{90,-10},
              {110,10}})));

    Modelica.Blocks.Interfaces.RealInput Tair "zone air temperature"
      annotation (Placement(transformation(extent={{20,-20},{-20,20}},
            rotation=180,
            origin={-100,20})));
    Modelica.Blocks.Interfaces.RealInput Trad "zone radiative temperature"
      annotation (Placement(transformation(extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-100,-20})));

      protected
    IDEAS.Building.Zone.PPD PPD_calc "PPD calculated"
      annotation (Placement(transformation(extent={{60,-16},{80,4}})));
    outer IDEAS.SimInfoManager sim
      annotation (Placement(transformation(extent={{-80,60},{-60,80}})));
    IDEAS.Building.Zone.Clo Clo_calc "clothing calculation"
      annotation (Placement(transformation(extent={{-54,60},{-34,80}})));
    IDEAS.Building.Zone.Tclo Tclo_calc(Linear=Linear)
          "clothing surface temperature"
        annotation (Placement(transformation(extent={{-26,26},{-6,46}})));
    IDEAS.Building.Zone.PMV PMV_calc(Linear=Linear) "pmv calculation"
        annotation (Placement(transformation(extent={{8,26},{28,46}})));
  equation
    connect(PPD_calc.PPD, PPD)
                          annotation (Line(
        points={{80,0},{100,0}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(Tclo_calc.Tclo, PMV_calc.Tclo)
                                   annotation (Line(
          points={{-6,40},{8,40}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Clo_calc.CloFrac, Tclo_calc.CloFrac)
                                         annotation (Line(
          points={{-34,68},{-14,68},{-14,46}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Clo_calc.CloFrac, PMV_calc.CloFrac)
                                        annotation (Line(
          points={{-34,68},{20,68},{20,46}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(PMV_calc.PMV, PPD_calc.PMV)
                                annotation (Line(
          points={{28,40},{40,40},{40,0},{60,0}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(PMV_calc.PMV, PMV)
                            annotation (Line(
          points={{28,40},{100,40}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Tair, Tclo_calc.Tair)
                               annotation (Line(
          points={{-100,20},{-40,20},{-40,-2},{-20,-2},{-20,26}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Tair, PMV_calc.Tair)
                              annotation (Line(
          points={{-100,20},{-40,20},{-40,-2},{14,-2},{14,26}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Trad, Tclo_calc.Trad)
                               annotation (Line(
          points={{-100,-20},{-40,-20},{-40,-40},{-14,-40},{-14,26}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Trad, PMV_calc.Trad)
                              annotation (Line(
          points={{-100,-20},{-40,-20},{-40,-40},{20,-40},{20,26}},
          color={0,0,127},
          smooth=Smooth.None));
    connect(Clo_calc.RClo, Tclo_calc.RClo)
                                   annotation (Line(
          points={{-34,74},{-20,74},{-20,46}},
          color={0,0,127},
          smooth=Smooth.None));
    annotation(Icon(graphics={
          Line(points={{-84,4},{-4,4}},  color={191,0,0}),
          Line(points={{-30,64},{-2,64}},  color={0,0,0}),
          Line(points={{-30,24},{-2,24}},  color={0,0,0}),
          Line(points={{-30,-16},{-2,-16}},  color={0,0,0}),
          Polygon(
            points={{-2,44},{-2,84},{0,90},{4,92},{10,94},{16,92},{20,90},{22,84},
                {22,44},{-2,44}},
            lineColor={0,0,0},
            lineThickness=0.5),
          Ellipse(
            extent={{-10,-94},{30,-56}},
            lineColor={0,0,0},
            lineThickness=0.5,
            fillColor={191,0,0},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-2,44},{22,-64}},
            fillColor={191,0,0},
            fillPattern=FillPattern.Solid,
            pattern=LinePattern.None),
          Line(
            points={{22,44},{22,-60}},
            color={0,0,0},
            thickness=0.5),
          Line(
            points={{-2,44},{-2,-60}},
            color={0,0,0},
            thickness=0.5)}),
        Diagram(graphics));
  end Fanger;
end Comfort;
end Occupants;

end Management;
